// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.7.1
// source: haversine.proto

package protoBuffer

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Coords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat  float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Long float64 `protobuf:"fixed64,2,opt,name=long,proto3" json:"long,omitempty"`
}

func (x *Coords) Reset() {
	*x = Coords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_haversine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coords) ProtoMessage() {}

func (x *Coords) ProtoReflect() protoreflect.Message {
	mi := &file_haversine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coords.ProtoReflect.Descriptor instead.
func (*Coords) Descriptor() ([]byte, []int) {
	return file_haversine_proto_rawDescGZIP(), []int{0}
}

func (x *Coords) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Coords) GetLong() float64 {
	if x != nil {
		return x.Long
	}
	return 0
}

type HaversineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstCoords  *Coords `protobuf:"bytes,1,opt,name=firstCoords,proto3" json:"firstCoords,omitempty"`
	SecondCoords *Coords `protobuf:"bytes,2,opt,name=secondCoords,proto3" json:"secondCoords,omitempty"`
}

func (x *HaversineRequest) Reset() {
	*x = HaversineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_haversine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaversineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaversineRequest) ProtoMessage() {}

func (x *HaversineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_haversine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaversineRequest.ProtoReflect.Descriptor instead.
func (*HaversineRequest) Descriptor() ([]byte, []int) {
	return file_haversine_proto_rawDescGZIP(), []int{1}
}

func (x *HaversineRequest) GetFirstCoords() *Coords {
	if x != nil {
		return x.FirstCoords
	}
	return nil
}

func (x *HaversineRequest) GetSecondCoords() *Coords {
	if x != nil {
		return x.SecondCoords
	}
	return nil
}

type HaversineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distance float64 `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
}

func (x *HaversineResponse) Reset() {
	*x = HaversineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_haversine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaversineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaversineResponse) ProtoMessage() {}

func (x *HaversineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_haversine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaversineResponse.ProtoReflect.Descriptor instead.
func (*HaversineResponse) Descriptor() ([]byte, []int) {
	return file_haversine_proto_rawDescGZIP(), []int{2}
}

func (x *HaversineResponse) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

var File_haversine_proto protoreflect.FileDescriptor

var file_haversine_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x06,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x22, 0x7e, 0x0a, 0x10,
	0x48, 0x61, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x0c,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x2f, 0x0a, 0x11,
	0x48, 0x61, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x32, 0x5c, 0x0a,
	0x10, 0x48, 0x61, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x48, 0x0a, 0x09, 0x48, 0x61, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6e, 0x65, 0x12, 0x1b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_haversine_proto_rawDescOnce sync.Once
	file_haversine_proto_rawDescData = file_haversine_proto_rawDesc
)

func file_haversine_proto_rawDescGZIP() []byte {
	file_haversine_proto_rawDescOnce.Do(func() {
		file_haversine_proto_rawDescData = protoimpl.X.CompressGZIP(file_haversine_proto_rawDescData)
	})
	return file_haversine_proto_rawDescData
}

var file_haversine_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_haversine_proto_goTypes = []interface{}{
	(*Coords)(nil),            // 0: grpcproto.Coords
	(*HaversineRequest)(nil),  // 1: grpcproto.HaversineRequest
	(*HaversineResponse)(nil), // 2: grpcproto.HaversineResponse
}
var file_haversine_proto_depIdxs = []int32{
	0, // 0: grpcproto.HaversineRequest.firstCoords:type_name -> grpcproto.Coords
	0, // 1: grpcproto.HaversineRequest.secondCoords:type_name -> grpcproto.Coords
	1, // 2: grpcproto.HaversineService.Haversine:input_type -> grpcproto.HaversineRequest
	2, // 3: grpcproto.HaversineService.Haversine:output_type -> grpcproto.HaversineResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_haversine_proto_init() }
func file_haversine_proto_init() {
	if File_haversine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_haversine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_haversine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaversineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_haversine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaversineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_haversine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_haversine_proto_goTypes,
		DependencyIndexes: file_haversine_proto_depIdxs,
		MessageInfos:      file_haversine_proto_msgTypes,
	}.Build()
	File_haversine_proto = out.File
	file_haversine_proto_rawDesc = nil
	file_haversine_proto_goTypes = nil
	file_haversine_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HaversineServiceClient is the client API for HaversineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HaversineServiceClient interface {
	Haversine(ctx context.Context, in *HaversineRequest, opts ...grpc.CallOption) (*HaversineResponse, error)
}

type haversineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHaversineServiceClient(cc grpc.ClientConnInterface) HaversineServiceClient {
	return &haversineServiceClient{cc}
}

func (c *haversineServiceClient) Haversine(ctx context.Context, in *HaversineRequest, opts ...grpc.CallOption) (*HaversineResponse, error) {
	out := new(HaversineResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.HaversineService/Haversine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HaversineServiceServer is the server API for HaversineService service.
type HaversineServiceServer interface {
	Haversine(context.Context, *HaversineRequest) (*HaversineResponse, error)
}

// UnimplementedHaversineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHaversineServiceServer struct {
}

func (*UnimplementedHaversineServiceServer) Haversine(context.Context, *HaversineRequest) (*HaversineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Haversine not implemented")
}

func RegisterHaversineServiceServer(s *grpc.Server, srv HaversineServiceServer) {
	s.RegisterService(&_HaversineService_serviceDesc, srv)
}

func _HaversineService_Haversine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HaversineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaversineServiceServer).Haversine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.HaversineService/Haversine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaversineServiceServer).Haversine(ctx, req.(*HaversineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HaversineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcproto.HaversineService",
	HandlerType: (*HaversineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Haversine",
			Handler:    _HaversineService_Haversine_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "haversine.proto",
}
